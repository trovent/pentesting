using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Impersonation
{
    class Program
    {
        static void Main(string[] args)
        {
            if (args.Length < 2)
            {
                Console.WriteLine("Usage: exe <PrivsToCheck> <PID>");
            }

            string priv = args[0];
            int pid = int.Parse(args[1]);

            try
            {
                List<string> allPrivs = Impersonation.Utils.Privs.getPrivs(pid);
                if (!allPrivs.Contains(priv))
                {
                    Console.WriteLine("[-] Privilege {0} is not assigned to the process {1}", priv, pid);
                    Environment.Exit(0);
                }
                bool privEnabled = Impersonation.Utils.Privs.checkPriv(priv, pid);
                if (!privEnabled)
                {
                    Console.WriteLine("[-] Privilege {0} is not enabled for the process {1}", priv, pid);
                }
                else
                {
                    Console.WriteLine("[-] Privilege {0} is assigned to {1} and enabled", priv, pid);
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.ToString());
            }

            try
            {
                Console.WriteLine("Impersonated: {0}", Impersonation.Utils.Privs.duplicateToken(pid));
                List<string> all = Impersonation.Utils.Privs.getPrivs(pid);
                Console.WriteLine("Privs after impersonation:");
                foreach (string p in all)
                {
                    Console.WriteLine("[+] " + p);
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.ToString());
            }
        }
    }
}
