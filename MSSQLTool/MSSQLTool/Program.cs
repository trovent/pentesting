/*
    This file is part of MSSQLTool.

    MSSQLTool is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    MSSQLTool is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with MSSQLTool.  If not, see <http://www.gnu.org/licenses/>.
*/

using System;
using System.Data.SqlClient;
using MSSQLTool.Utils;
using System.Collections.Generic;

namespace MSSQLTool
{
    class Program
    {
        static void Main(string[] args)
        {
            Dictionary<string, string> parser = ArgParser.parse(args);

            int size = parser.Count;

            if (size < 2)
            {
                Console.WriteLine("Usage: exe /enumerate /sqlServer:<name> (/database:<name>)\n" +
                    "Usage: exe /enumerate /impersonate:<user> /sqlServer:<name> (/database:<name>)\n" +
                    "Usage: exe /attack /user:<db user> /sqlServer:<sql server> /query:<sql query> (/database:<name>)");
                Environment.Exit(0);
            }

            String sqlServer = parser["/sqlServer"];
            String database = "master";
            String user = "";
            String query = "";
            String impersonatedUser = "";

            bool enumerate = true;
            bool impersonate = false;
            bool attack = false;

            if (parser.ContainsKey("/attack"))
            {
                enumerate = false;
                attack = true;
                user = parser["/user"];
                query = parser["/query"];
            }

            Console.WriteLine(String.Format("sqlServer: {0}\ndatabase: {1}\nenumerate: {2}\nquery: {3}", sqlServer, database, enumerate, query));

            if (parser.ContainsKey("/database"))
            {
                database = parser["/database"];
            }

            if (parser.ContainsKey("/impersonate"))
            {
                impersonatedUser = parser["/impersonate"];
                impersonate = true;
            }
            
            SqlConnection con = Connector.connect(sqlServer, database);

            if (enumerate)
            {
                if (impersonate)
                {
                    Console.WriteLine("[*] Enumerating as {0} user", impersonatedUser);
                    Enumerator.enumerateAs(impersonatedUser, con);
                }
                else
                {
                    Enumerator.enumerate(con);
                }
            }

            if (attack)
            {
                Attacker.attack(con, user, query);
            }

            try
            {
                con.Close();
            }
            catch
            {
                //
            }

        }
    }
}
